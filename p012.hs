{- 
 - author : Desotne Jolivet
 -  problem : what is the value of the first triangle number to have over five hundred divsors
 - Description : The sequence of triangle numbers are generated by dading the natural numbers. So the 7th triangle
 - number would be 1 + + 2 + 3 + 4 + 5 + 6 = 28
 -                                   1, 3, ,6 ,10, 15, 21 ,28, 36, 45 55, ...
 -
 - list of divisors: 
 - 1 : 1
 - 3: 1, 3
 - 6: 1, 2, 3, 6
 - 10: 1, 2, 5, 10
 - 15: 1, 3, 5, 15
 - 21: 1, 3, 7, 21
 - 28: 1, 2, 4, 7, 14, 28
 -
 - solution:
 -	1. Generate a sequence of triangle numbers
 -
 -                                   1, 3, ,6 ,10, 15, 21 ,28, 36, 45 55, ...
 -                                 
 -                                            A(n) = n + A(n-1)
 -}                                  


import Data.Set (Set)
import qualified Data.Set as Set


trianglenumbers = 1 : [ a + x | x <- [2..] :: [Integer], let a = trianglenumbers !! (fromIntegral (x - 2))] :: [Integer]
divisors :: Integer -> Integer -> Set Integer -> Set Integer 
divisors i a nums
     | a * a > i = nums 
     | i `mod` a == 0  = divisors i (a+1) $ Set.insert (i `div` a) $ Set.insert a nums 
     | otherwise = divisors i (a+1) nums


problem12 = take 1 [x |
                       x <- trianglenumbers,
                       sqrt (fromInteger  x) > 250,
                       (Set.size (divisors x 1 (Set.fromList [1]))) > 500]

main = print problem12
